(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{172:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[a._v("#")]),a._v(" Git")]),a._v(" "),s("h2",{attrs:{id:"basic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic","aria-hidden":"true"}},[a._v("#")]),a._v(" Basic")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git init\n")])])]),s("p",[a._v("create a new local repository")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("repo"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\ngit clone user@host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("repo"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("create a working copy of a repository")]),a._v(" "),s("h2",{attrs:{id:"commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit","aria-hidden":"true"}},[a._v("#")]),a._v(" Commit")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git add "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\ngit add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("add files to staging")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// commit changes to head (but not yet to remote repository)")]),a._v("\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"message"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// commit files added with git add and also any files you have changed since then")]),a._v("\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("a\n")])])]),s("p",[a._v("commit changes")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git push origin master\n")])])]),s("p",[a._v("send changes to the master branch")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git status\n")])])]),s("p",[a._v("list files you've changed and those that are not added or committed")]),a._v(" "),s("h2",{attrs:{id:"remote-repositories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remote-repositories","aria-hidden":"true"}},[a._v("#")]),a._v(" Remote Repositories")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// connect local repository with remote server")]),a._v("\ngit remote add origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("server"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// list all currently configured remote repositories")]),a._v("\ngit remote "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("v\n")])])]),s("p",[a._v("dealing with remote servers")]),a._v(" "),s("h2",{attrs:{id:"branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#branch","aria-hidden":"true"}},[a._v("#")]),a._v(" Branch")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// create a new branch")]),a._v("\ngit checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// switch branches")]),a._v("\ngit checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// list branches")]),a._v("\ngit branch\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// push all branches to remote repository")]),a._v("\ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("all origin\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// delete a branch")]),a._v("\ngit push origin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("for branching purposes")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// fetch and merge from remote server")]),a._v("\ngit pull\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// merge a branch into your branch")]),a._v("\ngit merge "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// view conflicts")]),a._v("\ngit diff\ngit diff "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("base "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\ngit diff "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("sourcebranch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("targetbranch"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// after resolving")]),a._v("\ngit add\n")])])]),s("p",[a._v("update from remote repository")]),a._v(" "),s("h1",{attrs:{id:"tags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tags","aria-hidden":"true"}},[a._v("#")]),a._v(" Tags")]),a._v(" "),s("h2",{attrs:{id:"tags-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tags-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Tags")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git tag "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commitID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// get commitID")]),a._v("\ngit log\n\ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("tags origin\n")])])]),s("p",[a._v("for tagging significant changesets like releases")]),a._v(" "),s("h2",{attrs:{id:"revert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#revert","aria-hidden":"true"}},[a._v("#")]),a._v(" Revert")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// replace changes in working tree with the last content in head")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// changes added to index as well as new files will be kept")]),a._v("\ngit checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// drop all local changes and commits, fetch latest history from server")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// and point local master branch at it")]),a._v("\ngit fetch origin\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard origin"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("master\n")])])]),s("p",[a._v("revert changes")]),a._v(" "),s("h2",{attrs:{id:"search"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search","aria-hidden":"true"}},[a._v("#")]),a._v(" Search")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git grep "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo()"')]),a._v("\n")])])]),s("p",[a._v("search the working directory for foo()")])])}],!1,null,null,null);t.default=r.exports}}]);