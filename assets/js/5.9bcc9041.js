(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{173:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("h2",{attrs:{id:"basic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic","aria-hidden":"true"}},[t._v("#")]),t._v(" Basic")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),a("p",[t._v("create a new local repository")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone user@host:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("create a working copy of a repository")]),t._v(" "),a("h2",{attrs:{id:"commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit","aria-hidden":"true"}},[t._v("#")]),t._v(" Commit")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("add files to staging")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// commit changes to "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("but not yet to remote repository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v("\n\n// commit files added with "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" and also any files you have changed since "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a\n")])])]),a("p",[t._v("commit changes")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n")])])]),a("p",[t._v("send changes to the master branch")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n")])])]),a("p",[t._v("list files you've changed and those that are not added or committed")]),t._v(" "),a("h2",{attrs:{id:"remote-repositories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remote-repositories","aria-hidden":"true"}},[t._v("#")]),t._v(" Remote Repositories")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// connect local repository with remote server\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("server"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// list all currently configured remote repositories\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n")])])]),a("p",[t._v("dealing with remote servers")]),t._v(" "),a("h2",{attrs:{id:"branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#branch","aria-hidden":"true"}},[t._v("#")]),t._v(" Branch")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// create a new branch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// switch branches\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// list branches\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n\n// delete a branch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// push all branches to remote repository\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -all origin\n")])])]),a("p",[t._v("for branching purposes")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// fetch and merge from remote server\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n\n// merge a branch into your branch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// view conflicts\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --base "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sourcebranch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("targetbranch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// after resolving\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("\n")])])]),a("p",[t._v("update from remote repository")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a fix to iss53")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b iss53\nSwitched to a new branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iss53"')]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.html\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'added a new footer [issue 53]'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# oops, new urgent hotfix in production")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b hotfix\nSwitched to a new branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hotfix'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.html\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fixed the broken email address'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hotfix 1fb7853"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" fixed the broken email address\n 1 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, 2 insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# merge it")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge hotfix\nUpdating f42c576"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("3a0874c\nFast-forward\n index.html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 2 ++\n 1 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, 2 insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d hotfix\nDeleted branch hotfix "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3a0874c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# return to that issue")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout iss53\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iss53"')]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" index.html\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'finished the new footer [issue 53]'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("iss53 ad82d7a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" finished the new footer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("issue 53"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n1 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, 1 insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\nSwitched to branch "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge iss53\nMerge made by the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\nindex.html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    1 +\n1 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, 1 insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d iss53\n")])])]),a("p",[t._v("Sample scenario")]),t._v(" "),a("h1",{attrs:{id:"tags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tags","aria-hidden":"true"}},[t._v("#")]),t._v(" Tags")]),t._v(" "),a("h2",{attrs:{id:"tags-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tags-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Tags")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag 1.0.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commitID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// get commitID\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --tags origin\n")])])]),a("p",[t._v("for tagging significant changesets like releases")]),t._v(" "),a("h2",{attrs:{id:"revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revert","aria-hidden":"true"}},[t._v("#")]),t._v(" Revert")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("// replace changes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" working tree with the last content "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v("\n// changes added to index as well as new files will be kept\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// drop all local changes and commits, fetch latest "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" from server\n// and point local master branch at it\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard origin/master\n")])])]),a("p",[t._v("revert changes")]),t._v(" "),a("h2",{attrs:{id:"gitignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitignore","aria-hidden":"true"}},[t._v("#")]),t._v(" Gitignore")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached filenames\n\nor\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fixing untracked files"')]),t._v("\n")])])]),a("p",[t._v("remove a previously tracked file(s) from git")]),t._v(" "),a("h2",{attrs:{id:"search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#search","aria-hidden":"true"}},[t._v("#")]),t._v(" Search")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo()"')]),t._v("\n")])])]),a("p",[t._v("search the working directory for foo()")])])}],!1,null,null,null);s.default=e.exports}}]);